#Test with: http://editor.swagger.io/




swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Crimes
  description: Node.js + MongoDB
  license:
    name: UNRisks
host: 192.168.99.101:3000
basePath: /courses-ms/resources
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /crimes:
    post:
      summary: Creates a new crime
      operationId: createCrime
      parameters:
        - name: crime
          in: body
          required: true
          description: Crime Object
          schema:
            $ref: '#/definitions/CrimeInput'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Crime'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all courses
      operationId: getAllCourses
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CrimesList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /courses/{code}:
    get:
      summary: Returns a course with the given code
      operationId: getCourseByCode
      parameters:
        - name: code
          in: path
          description: The code of the course to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Crime'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a course with the given code
      operationId: updateCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be updated
          required: true
          type: integer
        - name: course
          in: body
          required: true
          description: Course Object
          schema:
            $ref: '#/definitions/CrimeInput'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Crime'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a course with the given code
      operationId: deleteCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CrimesCode'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Courses
  Crime:
    type: object
    properties:
      _id:
        type: string
      date:
        type: string
      state:
        type: string
      city:
        type: integer
      day:
        type: string
      hour:
        type: string
      neighbourhood:
        type: string 
      zone:
        type: string
      site_class:
        type: string
      weapon_used:
        type: string
      mobility_agresor:
        type: string
      mobility_victim:
        type: string
      age:
        type: string
      gender:
        type: string
      marital_status:
        type: string
      country_origin:
        type: string
      kind_employee:
        type: string
      occupation:
        type: string
      scholarship:
        type: string
      
  CrimeInput:
    type: object
    properties:
      _id:
        type: string
      date:
        type: string
      state:
        type: string
      city:
        type: integer
      day:
        type: string
      hour:
        type: string
      neighbourhood:
        type: string 
      zone:
        type: string
      site_class:
        type: string
      weapon_used:
        type: string
      mobility_agresor:
        type: string
      mobility_victim:
        type: string
      age:
        type: string
      gender:
        type: string
      marital_status:
        type: string
      country_origin:
        type: string
      kind_employee:
        type: string
      occupation:
        type: string
      scholarship:
        type: string
      
  CrimesList:
    type: object
    required:
      - list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/Crime'
  
  CrimesCode:
    type: object
    properties:
      _id:
        type: integer
        
# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object
